---
- name: "Creating a security group"
  ec2_group:
    name: "{{ security_group }}"
    description: "test groups"
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    rules:
     - proto: tcp
       from_port: 22
       to_port: 22
       cidr_ip: 0.0.0.0/0
     - proto: tcp
       ports: 
         - 80
       cidr_ip: 0.0.0.0/0
       rule_desc: allow all on port 80
     - proto: tcp
       ports: 
         - 443
       cidr_ip: 0.0.0.0/0
       rule_desc: allow all on port 443
     - proto: icmp
       from_port: -1
       to_port: -1
       cidr_ip: 0.0.0.0/0
       rule_desc: allow all icmp
    rules_egress:
     - proto: all
       cidr_ip: 0.0.0.0/0
- name: "Launch the new EC2 Instance"
  ec2: 
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    group: "{{ security_group }}"
    instance_type: "{{ instance_type }}"
    image: "{{ image }}"
    wait: yes
    wait_timeout: 500
    monitoring: yes
    assign_public_ip: yes
    region: "{{ region }}"
    key_name: "{{ key_name }}"
    count: "{{ count }}"
    vpc_subnet_id: "{{ vpc_subnet_id }}"
  register: ec2
- name: "Add the newly created host so that we can further contact it"
  add_host:
    hostname: "{{ item.public_ip }}"
    groupname: ansible_servers
  with_items: "{{ ec2.instances }}"
- name: "Add tag to instance(s)"
  ec2_tag:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    resource: "{{ item.id }}"
    region: "{{ region }}"
    state: present
  with_items: "{{ ec2.instances }}"
  args: 
    tags:
      Name: "Ansible Server - {{ item.id }}"
      Owner: "Issaka Faisal"
      Purpose: "Testing EC2 Instance from Ansible"
      Type: ansible_server
      Env: testing
- name: "Wait for SSH to come up"
  wait_for:
    host: "{{ item.public_ip }}"
    port: 22
    state: started
  with_items: "{{ ec2.instances }}"
  #- name: "Wait for SSH to come up from the docs"
  #delegate_to: "{{ item.public_dns_name }}"
  #wait_for_connection:
  #  delay: 60
  #  timeout: 320
  #with_items: "{{ ec2.instances }}"

